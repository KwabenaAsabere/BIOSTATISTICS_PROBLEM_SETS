{
  "hash": "dc9c561abb7533d34622c7950d44af70",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"TIDY MODELS TUTORIAL\"\neditor: visual\neditor_options: \n  chunk_output_type: console\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidymodels)\nlibrary(tidyverse)\ntidymodels_prefer()\ntheme_set(theme_bw())\n ames <- ames\nset.seed(502)\n```\n:::\n\n\n### Split your data into training and testing sets\n\n\n::: {.cell}\n\n```{.r .cell-code}\names <- ames  %>% \n  mutate(Sale_Price =log(Sale_Price))\n\names_split <- initial_split(ames,prop = 0.8)\names_train <- training(ames_split)\names_test <- testing(ames_split)\n\nclass(ames$Sale_Price)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"numeric\"\n```\n\n\n:::\n:::\n\n\n### create model object\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_model <- linear_reg() %>% set_engine(\"lm\")\n```\n:::\n\n\n### fit the model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_form_fit <- lm_model %>%  \n  fit(Sale_Price ~ Latitude + Longitude,data = ames_train)\n```\n:::\n\n\n## fitting the model with `fit_xy()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- ames_train %>% select(Latitude,Longitude)\ny <- ames_train %>% pull(Sale_Price)\nlm_xy_fit <- lm_model %>% \n  fit_xy(\n    x= x,\n    y = y\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_xy_fit <- lm_model %>% \n  fit_xy(\n    x = ames_train %>% select(Latitude,Longitude),\n    y =ames_train %>% pull(Sale_Price)\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_form_fit\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nparsnip model object\n\n\nCall:\nstats::lm(formula = Sale_Price ~ Latitude + Longitude, data = data)\n\nCoefficients:\n(Intercept)     Latitude    Longitude  \n   -699.504        6.291       -4.774  \n```\n\n\n:::\n\n```{.r .cell-code}\nlm_xy_fit\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nparsnip model object\n\n\nCall:\nstats::lm(formula = ..y ~ ., data = data)\n\nCoefficients:\n(Intercept)     Latitude    Longitude  \n   -699.504        6.291       -4.774  \n```\n\n\n:::\n\n```{.r .cell-code}\nlm_form_fit %>% extract_fit_engine() %>% summary() %>% coef() \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n               Estimate Std. Error   t value     Pr(>|t|)\n(Intercept) -699.504403 33.5506824 -20.84919 1.090710e-88\nLatitude       6.291022  0.4166876  15.09769 3.225149e-49\nLongitude     -4.774366  0.2971856 -16.06527 3.568719e-55\n```\n\n\n:::\n\n```{.r .cell-code}\nlm_form_fit %>% tidy()\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|term        |    estimate|  std.error| statistic| p.value|\n|:-----------|-----------:|----------:|---------:|-------:|\n|(Intercept) | -699.504403| 33.5506824| -20.84919|       0|\n|Latitude    |    6.291022|  0.4166876|  15.09769|       0|\n|Longitude   |   -4.774366|  0.2971856| -16.06527|       0|\n\n</div>\n:::\n:::\n\n\n### Make Predictions\n\n\n::: {.cell}\n\n```{.r .cell-code}\names_test_small <- ames_test %>% slice(1:5)\n\npredict(lm_form_fit,new_data = ames_test_small) \n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|    .pred|\n|--------:|\n| 12.00420|\n| 12.10688|\n| 12.06533|\n| 12.03590|\n| 12.23624|\n\n</div>\n:::\n:::\n\n\n### combine tibbles\n\n\n::: {.cell}\n\n```{.r .cell-code}\names_test_small %>% select(Sale_Price) %>% \n  bind_cols(predict(lm_form_fit,new_data = ames_test_small)) %>% \n  ## add 95% confidence interval to the results\n  bind_cols(predict(lm_form_fit,new_data = ames_test_small, type= \"pred_int\"))\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n| Sale_Price|    .pred| .pred_lower| .pred_upper|\n|----------:|--------:|-----------:|-----------:|\n|   12.40492| 12.00420|    11.28084|    12.72757|\n|   12.88520| 12.10688|    11.38347|    12.83028|\n|   11.85652| 12.06533|    11.34193|    12.78873|\n|   11.89136| 12.03590|    11.31264|    12.75916|\n|   12.52453| 12.23624|    11.51280|    12.95969|\n\n</div>\n:::\n:::\n\n\n### decision tree models\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## create model object\ntree_model <- decision_tree(min_n = 2) %>% \n  set_engine(\"rpart\") %>% \n  set_mode(\"regression\")\n\n## fit model\ntree_fit <- tree_model %>% \n  fit(Sale_Price ~ Longitude + Latitude, data = ames_train)\n  \n## make predictions\names_test_small %>% \n  select(Sale_Price) %>% \n  bind_cols(predict(tree_fit,ames_test_small))\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n| Sale_Price|    .pred|\n|----------:|--------:|\n|   12.40492| 11.86211|\n|   12.88520| 12.77079|\n|   11.85652| 11.86211|\n|   11.89136| 11.86211|\n|   12.52453| 12.71867|\n\n</div>\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# parsnip_addin()\n```\n:::\n\n\n\n### Workflows\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_workflow <- workflow() %>% \n  add_model(lm_model)\n## if our model is very simple,a standard R formula can be used as a preprocessor\nlm_workflow <- lm_workflow %>% \n  add_formula(Sale_Price ~ Longitude + Latitude)\n\nlm_workflow\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Formula\nModel: linear_reg()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\nSale_Price ~ Longitude + Latitude\n\n── Model ───────────────────────────────────────────────────────────────────────\nLinear Regression Model Specification (regression)\n\nComputational engine: lm \n```\n\n\n:::\n:::\n\n\n### fitting workflow to data\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_fit <- fit(lm_workflow,ames_train)\nlm_fit\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n══ Workflow [trained] ══════════════════════════════════════════════════════════\nPreprocessor: Formula\nModel: linear_reg()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\nSale_Price ~ Longitude + Latitude\n\n── Model ───────────────────────────────────────────────────────────────────────\n\nCall:\nstats::lm(formula = ..y ~ ., data = data)\n\nCoefficients:\n(Intercept)    Longitude     Latitude  \n   -699.504       -4.774        6.291  \n```\n\n\n:::\n:::\n\n\n### using workflow for prediction\n\n::: {.cell}\n\n```{.r .cell-code}\npredict(lm_fit,ames_test_small)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|    .pred|\n|--------:|\n| 12.00420|\n| 12.10688|\n| 12.06533|\n| 12.03590|\n| 12.23624|\n\n</div>\n:::\n:::\n\n\nInstead of using a formula,u can add variables to the workflow\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_workflow <- lm_workflow %>% \n  remove_formula() %>% \n  add_variables(\n    outcomes = Sale_Price,\n    predictors = c(Latitude,Longitude)\n    \n  )\n\nlm_workflow\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Variables\nModel: linear_reg()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\nOutcomes: Sale_Price\nPredictors: c(Latitude, Longitude)\n\n── Model ───────────────────────────────────────────────────────────────────────\nLinear Regression Model Specification (regression)\n\nComputational engine: lm \n```\n\n\n:::\n:::\n\n\nThere is a convenience function called `last_fit()` that will fit the model to the entire training set and evaluate it with the testing set.\nFor `last_fit()` you pass a workflow and a split object\n\n::: {.cell}\n\n```{.r .cell-code}\nfinal_lm_res <- last_fit(lm_workflow,ames_split)\n\nfinal_lm_res %>% pull(.metrics)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  <chr>   <chr>          <dbl> <chr>               \n1 rmse    standard       0.380 Preprocessor1_Model1\n2 rsq     standard       0.197 Preprocessor1_Model1\n```\n\n\n:::\n\n```{.r .cell-code}\nfinal_lm_res %>% pull(.predictions)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n# A tibble: 586 × 4\n   .pred  .row Sale_Price .config             \n   <dbl> <int>      <dbl> <chr>               \n 1  12.0     4       12.4 Preprocessor1_Model1\n 2  12.1    18       12.9 Preprocessor1_Model1\n 3  12.1    19       11.9 Preprocessor1_Model1\n 4  12.0    36       11.9 Preprocessor1_Model1\n 5  12.2    42       12.5 Preprocessor1_Model1\n 6  12.2    55       12.1 Preprocessor1_Model1\n 7  12.2    64       12.6 Preprocessor1_Model1\n 8  12.2    66       12.9 Preprocessor1_Model1\n 9  12.1    70       12.5 Preprocessor1_Model1\n10  12.1    71       12.4 Preprocessor1_Model1\n# ℹ 576 more rows\n```\n\n\n:::\n:::\n\n\n## Feature Engineering With Recipes\n\n### Formula with base R\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_fit_base <- ames_train %>% \n  lm(Sale_Price ~ Neighborhood + log10(Gr_Liv_Area) + Year_Built + Bldg_Type, data = .)\n\nsummary(lm_fit_base) %>% tidy()\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|term                                                |   estimate| std.error|   statistic|   p.value|\n|:---------------------------------------------------|----------:|---------:|-----------:|---------:|\n|(Intercept)                                         | -1.7468868| 0.5211170|  -3.3521969| 0.0008146|\n|NeighborhoodCollege_Creek                           |  0.0395493| 0.0186203|   2.1239915| 0.0337768|\n|NeighborhoodOld_Town                                | -0.0675926| 0.0186934|  -3.6158460| 0.0003058|\n|NeighborhoodEdwards                                 | -0.1017006| 0.0172329|  -5.9015517| 0.0000000|\n|NeighborhoodSomerset                                |  0.1223540| 0.0218532|   5.5989155| 0.0000000|\n|NeighborhoodNorthridge_Heights                      |  0.3150755| 0.0230069|  13.6947972| 0.0000000|\n|NeighborhoodGilbert                                 | -0.0673957| 0.0211918|  -3.1802696| 0.0014909|\n|NeighborhoodSawyer                                  | -0.0003707| 0.0188520|  -0.0196646| 0.9843126|\n|NeighborhoodNorthwest_Ames                          |  0.0071765| 0.0206741|   0.3471274| 0.7285272|\n|NeighborhoodSawyer_West                             | -0.0464720| 0.0221213|  -2.1007768| 0.0357687|\n|NeighborhoodMitchell                                |  0.0116008| 0.0225266|   0.5149820| 0.6066148|\n|NeighborhoodBrookside                               | -0.0352152| 0.0222941|  -1.5795758| 0.1143410|\n|NeighborhoodCrawford                                |  0.2257986| 0.0229491|   9.8390995| 0.0000000|\n|NeighborhoodIowa_DOT_and_Rail_Road                  | -0.2102458| 0.0254720|  -8.2540074| 0.0000000|\n|NeighborhoodTimberland                              |  0.1511402| 0.0269134|   5.6157878| 0.0000000|\n|NeighborhoodNorthridge                              |  0.1852594| 0.0293560|   6.3107946| 0.0000000|\n|NeighborhoodStone_Brook                             |  0.3740330| 0.0327010|  11.4379574| 0.0000000|\n|NeighborhoodSouth_and_West_of_Iowa_State_University | -0.0650714| 0.0310328|  -2.0968591| 0.0361145|\n|NeighborhoodClear_Creek                             |  0.1214055| 0.0333914|   3.6358333| 0.0002831|\n|NeighborhoodMeadow_Village                          | -0.1996464| 0.0392787|  -5.0828171| 0.0000004|\n|NeighborhoodBriardale                               | -0.1207669| 0.0442709|  -2.7279101| 0.0064219|\n|NeighborhoodBloomington_Heights                     |  0.1008327| 0.0425808|   2.3680330| 0.0179649|\n|NeighborhoodVeenker                                 |  0.1550720| 0.0418743|   3.7032720| 0.0002178|\n|NeighborhoodNorthpark_Villa                         |  0.0691623| 0.0470015|   1.4714921| 0.1412943|\n|NeighborhoodBlueste                                 |  0.1055655| 0.0712541|   1.4815358| 0.1386002|\n|NeighborhoodGreens                                  |  0.4387133| 0.0831903|   5.2736139| 0.0000001|\n|NeighborhoodGreen_Hills                             |  0.4161501| 0.1799336|   2.3127978| 0.0208212|\n|NeighborhoodLandmark                                | -0.0280322| 0.1815055|  -0.1544427| 0.8772741|\n|log10(Gr_Liv_Area)                                  |  1.4306574| 0.0319483|  44.7804380| 0.0000000|\n|Year_Built                                          |  0.0046942| 0.0002624|  17.8872822| 0.0000000|\n|Bldg_TypeTwoFmCon                                   | -0.0544934| 0.0257931|  -2.1127132| 0.0347323|\n|Bldg_TypeDuplex                                     | -0.2331245| 0.0203629| -11.4484904| 0.0000000|\n|Bldg_TypeTwnhs                                      | -0.2173951| 0.0287804|  -7.5535808| 0.0000000|\n|Bldg_TypeTwnhsE                                     | -0.0987390| 0.0175081|  -5.6396320| 0.0000000|\n\n</div>\n:::\n\n```{.r .cell-code}\nsummary(lm_fit_base)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = Sale_Price ~ Neighborhood + log10(Gr_Liv_Area) + \n    Year_Built + Bldg_Type, data = .)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.93386 -0.09410  0.00299  0.09936  0.91486 \n\nCoefficients:\n                                                      Estimate Std. Error\n(Intercept)                                         -1.7468868  0.5211170\nNeighborhoodCollege_Creek                            0.0395493  0.0186203\nNeighborhoodOld_Town                                -0.0675926  0.0186934\nNeighborhoodEdwards                                 -0.1017006  0.0172329\nNeighborhoodSomerset                                 0.1223540  0.0218532\nNeighborhoodNorthridge_Heights                       0.3150755  0.0230069\nNeighborhoodGilbert                                 -0.0673957  0.0211918\nNeighborhoodSawyer                                  -0.0003707  0.0188520\nNeighborhoodNorthwest_Ames                           0.0071765  0.0206741\nNeighborhoodSawyer_West                             -0.0464720  0.0221213\nNeighborhoodMitchell                                 0.0116008  0.0225266\nNeighborhoodBrookside                               -0.0352152  0.0222941\nNeighborhoodCrawford                                 0.2257986  0.0229491\nNeighborhoodIowa_DOT_and_Rail_Road                  -0.2102458  0.0254720\nNeighborhoodTimberland                               0.1511402  0.0269134\nNeighborhoodNorthridge                               0.1852594  0.0293560\nNeighborhoodStone_Brook                              0.3740330  0.0327010\nNeighborhoodSouth_and_West_of_Iowa_State_University -0.0650714  0.0310328\nNeighborhoodClear_Creek                              0.1214055  0.0333914\nNeighborhoodMeadow_Village                          -0.1996464  0.0392787\nNeighborhoodBriardale                               -0.1207669  0.0442709\nNeighborhoodBloomington_Heights                      0.1008327  0.0425808\nNeighborhoodVeenker                                  0.1550720  0.0418743\nNeighborhoodNorthpark_Villa                          0.0691623  0.0470015\nNeighborhoodBlueste                                  0.1055655  0.0712541\nNeighborhoodGreens                                   0.4387133  0.0831903\nNeighborhoodGreen_Hills                              0.4161501  0.1799336\nNeighborhoodLandmark                                -0.0280322  0.1815055\nlog10(Gr_Liv_Area)                                   1.4306574  0.0319483\nYear_Built                                           0.0046942  0.0002624\nBldg_TypeTwoFmCon                                   -0.0544934  0.0257931\nBldg_TypeDuplex                                     -0.2331245  0.0203629\nBldg_TypeTwnhs                                      -0.2173951  0.0287804\nBldg_TypeTwnhsE                                     -0.0987390  0.0175081\n                                                    t value Pr(>|t|)    \n(Intercept)                                          -3.352 0.000815 ***\nNeighborhoodCollege_Creek                             2.124 0.033777 *  \nNeighborhoodOld_Town                                 -3.616 0.000306 ***\nNeighborhoodEdwards                                  -5.902 4.13e-09 ***\nNeighborhoodSomerset                                  5.599 2.41e-08 ***\nNeighborhoodNorthridge_Heights                       13.695  < 2e-16 ***\nNeighborhoodGilbert                                  -3.180 0.001491 ** \nNeighborhoodSawyer                                   -0.020 0.984313    \nNeighborhoodNorthwest_Ames                            0.347 0.728527    \nNeighborhoodSawyer_West                              -2.101 0.035769 *  \nNeighborhoodMitchell                                  0.515 0.606615    \nNeighborhoodBrookside                                -1.580 0.114341    \nNeighborhoodCrawford                                  9.839  < 2e-16 ***\nNeighborhoodIowa_DOT_and_Rail_Road                   -8.254 2.54e-16 ***\nNeighborhoodTimberland                                5.616 2.19e-08 ***\nNeighborhoodNorthridge                                6.311 3.32e-10 ***\nNeighborhoodStone_Brook                              11.438  < 2e-16 ***\nNeighborhoodSouth_and_West_of_Iowa_State_University  -2.097 0.036115 *  \nNeighborhoodClear_Creek                               3.636 0.000283 ***\nNeighborhoodMeadow_Village                           -5.083 4.02e-07 ***\nNeighborhoodBriardale                                -2.728 0.006422 ** \nNeighborhoodBloomington_Heights                       2.368 0.017965 *  \nNeighborhoodVeenker                                   3.703 0.000218 ***\nNeighborhoodNorthpark_Villa                           1.471 0.141294    \nNeighborhoodBlueste                                   1.482 0.138600    \nNeighborhoodGreens                                    5.274 1.46e-07 ***\nNeighborhoodGreen_Hills                               2.313 0.020821 *  \nNeighborhoodLandmark                                 -0.154 0.877274    \nlog10(Gr_Liv_Area)                                   44.780  < 2e-16 ***\nYear_Built                                           17.887  < 2e-16 ***\nBldg_TypeTwoFmCon                                    -2.113 0.034732 *  \nBldg_TypeDuplex                                     -11.448  < 2e-16 ***\nBldg_TypeTwnhs                                       -7.554 6.06e-14 ***\nBldg_TypeTwnhsE                                      -5.640 1.91e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1788 on 2310 degrees of freedom\nMultiple R-squared:  0.8064,\tAdjusted R-squared:  0.8036 \nF-statistic: 291.6 on 33 and 2310 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n\n\n### A simple recipe\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsimple_res <- ames_train %>% \n  recipe(Sale_Price ~ Neighborhood + Gr_Liv_Area + Year_Built + Bldg_Type,data = .) %>% \n  step_log(Gr_Liv_Area,base = 10) %>% \n  step_dummy(all_nominal_predictors())\n\nsimple_res\n```\n:::\n\n\nWe can add recipe objects to workflow objects.\nIf a formula (which serves as a preprocessor) already exists,you must remove it before starting a new recipe.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_workflow <- \n  lm_workflow %>% \n  remove_variables() %>% \n  add_recipe(simple_res)\n\nlm_workflow\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: linear_reg()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n2 Recipe Steps\n\n• step_log()\n• step_dummy()\n\n── Model ───────────────────────────────────────────────────────────────────────\nLinear Regression Model Specification (regression)\n\nComputational engine: lm \n```\n\n\n:::\n:::\n\n\n#### calling fit()\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_fit <- fit(lm_workflow,ames_train)\npredict(lm_fit, ames_test_small)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|    .pred|\n|--------:|\n| 12.24725|\n| 12.73874|\n| 11.54528|\n| 11.91545|\n| 12.60103|\n\n</div>\n:::\n:::\n\n\n### Interaction Terms\nAlways make dummy variables first before adding interaction points \n\n::: {.cell}\n\n```{.r .cell-code}\n simple_res <- ames_train %>% \n  recipe(Sale_Price ~ Neighborhood + Gr_Liv_Area + Year_Built + Bldg_Type,data = .) %>% \n  step_log(Gr_Liv_Area,base = 10) %>% \n  step_dummy(all_nominal_predictors()) %>% \n  step_interact(~Gr_Liv_Area:starts_with(\"Bldg_Type_\"))\n```\n:::\n\n\n\n### Spline Terms\n\n::: {.cell}\n\n```{.r .cell-code}\nsimple_res <- ames_train %>% \n  recipe(Sale_Price ~ Neighborhood + Gr_Liv_Area + Year_Built + Bldg_Type,data = .) %>% \n  step_log(Gr_Liv_Area,base = 10) %>% \n  step_dummy(all_nominal_predictors()) %>% \n  step_interact(~Gr_Liv_Area:starts_with(\"Bldg_Type_\")) %>% \n  step_ns(Latitude, deg_free = 20) # natural spline\n\nlm_fit <- fit(lm_workflow,ames_train)\npredict(lm_fit, ames_test_small)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|    .pred|\n|--------:|\n| 12.24725|\n| 12.73874|\n| 11.54528|\n| 11.91545|\n| 12.60103|\n\n</div>\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}