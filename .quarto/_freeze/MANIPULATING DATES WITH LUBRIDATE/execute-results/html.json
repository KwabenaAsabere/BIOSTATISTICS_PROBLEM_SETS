{
  "hash": "71be6b8cbe01734eb121e4872152c77c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"MANIPULATING DATES WITH LUBRIDATE\"\neditor: visual\neditor_options: \n  chunk_output_type: console\n---\n\n\n##  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\ntheme_set(theme_bw())\nlibrary(skimr)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nswiftsongs <- read_csv(\"swiftSongsFull.csv\")\n\n\nswiftsongs <- swiftsongs %>% \n  select(track_name,album_name,youtube_url,youtube_title,youtube_publish_date,youtube_duration,song_release_date_year,song_release_date_month,song_release_date_day)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nswiftsongs %>% \n  pull(youtube_publish_date) %>% class()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"POSIXct\" \"POSIXt\" \n```\n\n\n:::\n\n```{.r .cell-code}\nswiftsongs %>% skim()\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |           |\n|:------------------------|:----------|\n|Name                     |Piped data |\n|Number of rows           |150        |\n|Number of columns        |9          |\n|_______________________  |           |\n|Column type frequency:   |           |\n|character                |5          |\n|numeric                  |3          |\n|POSIXct                  |1          |\n|________________________ |           |\n|Group variables          |None       |\n\n\n**Variable type: character**\n\n|skim_variable    | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:----------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|track_name       |         0|             1|   2|  70|     0|      150|          0|\n|album_name       |         0|             1|   3|  12|     0|       10|          0|\n|youtube_url      |         0|             1|  42|  42|     0|      150|          0|\n|youtube_title    |         0|             1|   5|  79|     0|      150|          0|\n|youtube_duration |         0|             1|   4|   7|     0|       92|          0|\n\n\n**Variable type: numeric**\n\n|skim_variable           | n_missing| complete_rate|    mean|   sd|   p0|     p25|    p50|  p75| p100|hist  |\n|:-----------------------|---------:|-------------:|-------:|----:|----:|-------:|------:|----:|----:|:-----|\n|song_release_date_year  |         0|             1| 2014.99| 5.15| 2006| 2010.25| 2017.0| 2020| 2022|▃▅▂▂▇ |\n|song_release_date_month |         0|             1|    9.50| 1.78|    3|    8.00|   10.0|   11|   12|▁▁▅▇▅ |\n|song_release_date_day   |         0|             1|   18.38| 6.87|    2|   11.00|   21.5|   24|   28|▁▅▁▅▇ |\n\n\n**Variable type: POSIXct**\n\n|skim_variable        | n_missing| complete_rate|min                 |max                 |median              | n_unique|\n|:--------------------|---------:|-------------:|:-------------------|:-------------------|:-------------------|--------:|\n|youtube_publish_date |         0|             1|2009-06-16 21:42:34 |2022-10-25 04:00:09 |2018-11-21 08:34:37 |      133|\n\n\n:::\n:::\n\n\n## Creating date/time \n\n\n::: {.cell}\n\n```{.r .cell-code}\nymd(\"1989-12-04\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"1989-12-04\"\n```\n\n\n:::\n\n```{.r .cell-code}\nmdy(\"12-04-1989\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"1989-12-04\"\n```\n\n\n:::\n\n```{.r .cell-code}\ndmy(\"04-12-1989\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"1989-12-04\"\n```\n\n\n:::\n\n```{.r .cell-code}\nclass(dmy(\"04-12-1989\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Date\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nswiftsongs <- swiftsongs  %>% \n  mutate(song_release_date_char = str_c(song_release_date_year,\"-\",song_release_date_month,\"-\",song_release_date_day),\n         song_release_date = ymd(song_release_date_char)\n         )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nswiftsongs %>% \n  ggplot(aes(x= song_release_date, y = youtube_publish_date,color=album_name))+\n  geom_point()+\n  labs(title = \"Taylor Swift Release Dates\",\n       y = \"YouTube video release date\",\n       x = \"Song Release Date\",\n       color = \"Album\",\n       caption = \"Data source: YouTube API & Genius API\") +\n  theme_bw()+\n  theme(legend.position = \"bottom\",\n        text = element_text(face = \"bold\"))\n```\n\n::: {.cell-output-display}\n![](MANIPULATING-DATES-WITH-LUBRIDATE_files/figure-html/unnamed-chunk-6-1.png){width=576}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n## using the make_datetime function\nswiftsongs <- swiftsongs %>% \n  mutate(track_release_date = make_datetime(\n    year = song_release_date_year,\n    month = song_release_date_month,\n    day = song_release_date_day\n    ))\n```\n:::\n\n\n\n### Extracting date/time components\n\n::: {.cell}\n\n```{.r .cell-code}\n# Extract year,month and day of the release date of thr YouTube videos using the you_tube_publish date variable\n\nswiftsongs <- swiftsongs %>% \n  mutate(youtube_publish_date_year = year(youtube_publish_date),\n         youtube_publish_date_month = month(youtube_publish_date),\n         youtube_publish_date_day = day(youtube_publish_date))\n\n## extract day of the week  as a string using the youtube_publish_date variable\n\nswiftsongs <- swiftsongs %>% \n  mutate(youtube_title_wday = wday(youtube_publish_date,label= TRUE, abbr= FALSE))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggpubr)\nbackimage <- png::readPNG(\"lover-album.png\")\n\nswiftsongs %>% \n  ggplot(aes(x = youtube_title_wday))+\n  background_image(backimage)+\n  geom_bar( fill = \"#69b4dc\",\n            color = \"#fc94bc\")+\n  labs(\n    title = \"Taylor Swift YouTube videos: day of release\",\n    x = \"Release day\",\n    y = \"Number of Videos\",\n    caption = \"Data source:Youtube API\"\n  )+\n  theme(element_text(face = \"bold\"))\n```\n\n::: {.cell-output-display}\n![](MANIPULATING-DATES-WITH-LUBRIDATE_files/figure-html/unnamed-chunk-9-1.png){width=576}\n:::\n:::\n\n\n### Calculating Difference between date/times\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## calculating someone's age inyears\ndob <- ymd(\"1993-06-01\")\nage <- today() - dob\nage\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTime difference of 11344 days\n```\n\n\n:::\n\n```{.r .cell-code}\n## calculating in years\ninterval(dob, today())/years(1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 31.05753\n```\n\n\n:::\n\n```{.r .cell-code}\n## Using the song release date to calculate how many days it has been since the most recent Taylor swift release\nrecentRelease <-  swiftsongs %>% pull(song_release_date) %>% \n  max()\n\ntoday() - recentRelease\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTime difference of 610 days\n```\n\n\n:::\n\n```{.r .cell-code}\ninterval(recentRelease, today())/years(1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.669399\n```\n\n\n:::\n:::\n",
    "supporting": [
      "MANIPULATING-DATES-WITH-LUBRIDATE_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}